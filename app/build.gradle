apply plugin: 'com.android.application'
apply plugin: 'com.metova.cappuccino-animations'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "com.autonomousapps.reactivestopwatch"
        minSdkVersion 24
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        jackOptions {
            enabled true
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        // Allows Android code to be called from unit tests without causing a crash.
        // Helpful for allowing Log.d()-type calls
        unitTests.returnDefaultValues = true
    }
}

// Note the use of `annotationProcessor`. This is a drop-in replacement for the android-apt plugin and its siblings.
// See here: http://tools.android.com/tech-docs/jackandjill
dependencies {
    def androidsupport_version = '24.2.1'
    def dagger_version = '2.6.1'//'2.7'
    def autovalue_version = '1.2'//'1.3-rc2'//'1.2'
    def autovalue_parcel_version = '0.2.5-SNAPSHOT'//'0.2.4-rc2'
    def butterknife_version = '8.4.0'
    def rxjava_version = '1.1.9'
    def rxandroid_version = '1.2.1'

    def junit_version = '4.12'
    def mockito_version = '1.10.19'
    def dexmaker_version = '1.4'
    def hamcrest_version = '1.3'
    def espresso_core_version = '2.2.2'
    def espresso_contrib_version = '2.0'
    def espresso_runner_version = '0.5'
    def cappuccino_version = '0.9'
    def uiautomator_version = '2.1.2'
    def awaitility_version = '2.0.0'

    compile "com.android.support:appcompat-v7:${androidsupport_version}"

    compile "com.jakewharton:butterknife:${butterknife_version}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife_version}"

    // Rx
    compile "io.reactivex:rxandroid:${rxandroid_version}"
    compile "io.reactivex:rxjava:${rxjava_version}"

    // Dagger
    compile "com.google.dagger:dagger:${dagger_version}"
    annotationProcessor "com.google.dagger:dagger-compiler:${dagger_version}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${dagger_version}"

    // AutoValue
    provided "com.google.auto.value:auto-value:${autovalue_version}"
    annotationProcessor "com.google.auto.value:auto-value:${autovalue_version}"
    // auto-value-parcel does not work with AIDL. Tools bug: https://code.google.com/p/android/issues/detail?id=224480
//    annotationProcessor "com.ryanharter.auto.value:auto-value-parcel:${autovalue_parcel_version}"

    /*
     * Unit tests
     */
    testCompile "junit:junit:${junit_version}"
    testCompile "org.mockito:mockito-core:${mockito_version}"
    testCompile "org.hamcrest:hamcrest-library:${hamcrest_version}"

    /*
     * UI tests
     */
    androidTestCompile "com.android.support:support-annotations:${androidsupport_version}"
    androidTestCompile "com.android.support.test:runner:${espresso_runner_version}"
    androidTestCompile "com.android.support.test:rules:${espresso_runner_version}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espresso_core_version}"
    androidTestCompile "com.android.support.test.espresso:espresso-web:${espresso_core_version}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espresso_core_version}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${espresso_contrib_version}") {
        exclude module: "appcompat"
        exclude module: "support-v4"
        exclude module: "recyclerview-v7"
    }
    androidTestCompile "com.android.support.test.uiautomator:uiautomator-v18:${uiautomator_version}"
    androidTestCompile "org.hamcrest:hamcrest-library:${hamcrest_version}"
    androidTestCompile "junit:junit:${junit_version}"
    androidTestCompile "org.mockito:mockito-core:${mockito_version}"
    androidTestCompile "com.crittercism.dexmaker:dexmaker:${dexmaker_version}"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-mockito:${dexmaker_version}"
    androidTestCompile "com.crittercism.dexmaker:dexmaker-dx:${dexmaker_version}"
    androidTestCompile("org.awaitility:awaitility:${awaitility_version}") {
        transitive = false
    } // for testing asynchronous code

    // System animations and IdlingResources
    debugCompile("com.metova:cappuccino:${cappuccino_version}") {
        transitive = false
    }
    releaseCompile "com.metova:cappuccino-no-op:${cappuccino_version}"
}

task sanityCheck {
    group = "verification"

    dependsOn 'assembleDebugAndroidTest', 'compileDebugUnitTestJavaWithJavac'
    doLast {
        println "\n#####################################################" +
                "\n# Sanity check success! You may now push to origin. #" +
                "\n#####################################################"
    }
}